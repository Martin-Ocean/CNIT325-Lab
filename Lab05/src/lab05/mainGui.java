/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab05;

import java.awt.event.*;
import java.util.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Ming
 */
public class mainGui extends javax.swing.JFrame {

    final private static String EMPTY = "";
    protected ArrayList<Student> studentData = new ArrayList<Student>();
    private int saveIndex = -1;

    /**
     * Creates new form mainGui
     */
    public mainGui() {
        initComponents();
        setInputFields(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        fName = new javax.swing.JTextField();
        mInitial = new javax.swing.JTextField();
        lName = new javax.swing.JTextField();
        PUID = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        state = new javax.swing.JTextField();
        zipCode = new javax.swing.JComboBox<>();
        country = new javax.swing.JComboBox<>();
        major = new javax.swing.JComboBox<>();
        college = new javax.swing.JComboBox<>();
        thesis = new javax.swing.JRadioButton();
        nonThesis = new javax.swing.JRadioButton();
        master = new javax.swing.JRadioButton();
        PhD = new javax.swing.JRadioButton();
        btnSave = new javax.swing.JButton();
        btnQuery = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        mItemNew = new javax.swing.JMenu();
        mItemNewUndergrad = new javax.swing.JMenuItem();
        mItemNewGraduate = new javax.swing.JMenuItem();
        mItemNewNonDegree = new javax.swing.JMenuItem();
        mItemSave = new javax.swing.JMenuItem();
        mItemClear = new javax.swing.JMenuItem();
        menuQuery = new javax.swing.JMenu();
        mItemEnter = new javax.swing.JMenuItem();
        mItemExecute = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("First Name");

        jLabel2.setText("State");

        jLabel3.setText("Major");

        jLabel4.setText("College");

        jLabel5.setText("Last Name");

        jLabel6.setText("Address");

        jLabel7.setText("PUID");

        jLabel8.setText("Middle Initial");

        jLabel9.setText("Country");

        jLabel10.setText("ZipCode");

        fName.setPreferredSize(new java.awt.Dimension(100, 30));

        mInitial.setPreferredSize(new java.awt.Dimension(100, 30));

        lName.setPreferredSize(new java.awt.Dimension(100, 30));

        PUID.setPreferredSize(new java.awt.Dimension(100, 30));

        address.setPreferredSize(new java.awt.Dimension(100, 30));

        state.setPreferredSize(new java.awt.Dimension(100, 30));

        zipCode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "47906 /WL", "10001 /NYC", "20001 /DC", "30001 /GA", "73301 /TX", "90001 /LA", "20101 /VA", " " }));
        zipCode.setPreferredSize(new java.awt.Dimension(100, 30));

        country.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "USA", "Canada", "India", "China", "France,", "England", "Tunisia. " }));
        country.setPreferredSize(new java.awt.Dimension(100, 30));

        major.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Computer Technology", "Computer Engineering", "Electrical Engineering", "Physics", "Geography", "Chemistry" }));
        major.setPreferredSize(new java.awt.Dimension(100, 30));

        college.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "College of Engineering", "Science", "Arts", "Sciences" }));
        college.setPreferredSize(new java.awt.Dimension(100, 30));

        thesis.setText("Thesis");
        thesis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thesisActionPerformed(evt);
            }
        });

        nonThesis.setText("Non-Thesis");
        nonThesis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonThesisActionPerformed(evt);
            }
        });

        master.setText("MS");
        master.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masterActionPerformed(evt);
            }
        });

        PhD.setText("PhD");
        PhD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhDActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setSize(new java.awt.Dimension(100, 50));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnQuery.setText("Query");
        btnQuery.setSize(new java.awt.Dimension(100, 50));
        btnQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.setSize(new java.awt.Dimension(100, 50));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.setSize(new java.awt.Dimension(100, 50));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(thesis)
                                    .addComponent(master))
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PhD)
                                    .addComponent(nonThesis))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mInitial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PUID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(zipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(major, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(college, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(mInitial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(PUID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(zipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(major, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(college, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(master)
                            .addComponent(PhD)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(thesis)
                        .addComponent(nonThesis)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuFile.setText("File");

        mItemNew.setText("New");

        mItemNewUndergrad.setText("Undergrad");
        mItemNewUndergrad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemNewUndergradActionPerformed(evt);
            }
        });
        mItemNew.add(mItemNewUndergrad);

        mItemNewGraduate.setText("Graduate");
        mItemNewGraduate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemNewGraduateActionPerformed(evt);
            }
        });
        mItemNew.add(mItemNewGraduate);

        mItemNewNonDegree.setText("NonDegree");
        mItemNewNonDegree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemNewNonDegreeActionPerformed(evt);
            }
        });
        mItemNew.add(mItemNewNonDegree);

        menuFile.add(mItemNew);

        mItemSave.setText("Save");
        mItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemSaveActionPerformed(evt);
            }
        });
        menuFile.add(mItemSave);

        mItemClear.setText("Clear");
        mItemClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemClearActionPerformed(evt);
            }
        });
        menuFile.add(mItemClear);

        jMenuBar.add(menuFile);

        menuQuery.setText("Query");

        mItemEnter.setText("Enter");
        mItemEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemEnterActionPerformed(evt);
            }
        });
        menuQuery.add(mItemEnter);

        mItemExecute.setText("Execute");
        mItemExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemExecuteActionPerformed(evt);
            }
        });
        menuQuery.add(mItemExecute);

        jMenuBar.add(menuQuery);

        menuHelp.setText("Help");

        menuItemAbout.setText("About");
        menuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAboutActionPerformed(evt);
            }
        });
        menuHelp.add(menuItemAbout);

        jMenuBar.add(menuHelp);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
//        new Data(isThesis,fName.getText(),mInitial.getText(),lName.getText(), PUID.getText(), address.getText(),
//                state.getText(), zipCode.getSelectedItem().toString(), country.getSelectedItem().toString(),
//                college.getSelectedItem().toString(), major.getSelectedItem().toString());
        if (isUndergrad) {
            Student underGrad = new Undergrad(fName.getText(), mInitial.getText(), lName.getText(), PUID.getText(),
                    address.getText(), state.getText(), zipCode.getSelectedItem().toString(),
                    country.getSelectedItem().toString(), college.getSelectedItem().toString());
            studentData.add(underGrad);
            setInputFields(false);
            isUndergrad = false;
            clearText();
        } else if (isGraduate) {
            Student grad = new Graduate(fName.getText(), mInitial.getText(), lName.getText(), PUID.getText(),
                    address.getText(), state.getText(), zipCode.getSelectedItem().toString(),
                    country.getSelectedItem().toString(), major.getSelectedItem().toString(), isThesis, masterPhD);

            studentData.add(grad);
            setInputFields(false);
            isGraduate = false;
            clearText();
        } else if (isNonDegree) {
            Student nonDegree = new Undergrad(fName.getText(), mInitial.getText(), lName.getText(), PUID.getText(),
                    address.getText(), state.getText(), zipCode.getSelectedItem().toString(),
                    country.getSelectedItem().toString(), college.getSelectedItem().toString());
            studentData.add(nonDegree);
            setInputFields(false);
            isNonDegree = false;
            clearText();
        }
        
        if (saveIndex != -1) {
            studentData.remove(saveIndex);
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQueryActionPerformed
        if (!PUID.isEnabled()) {
            PUID.setEnabled(true);
        } else {
            String findStudent = PUID.getText().trim();
            String locPUID;
            Boolean found = false;
            

            for (Student student : studentData) {
                locPUID = student.getPUID();
                if (locPUID.equals(findStudent)) {
                    saveIndex = studentData.indexOf(student);
                    fName.setText(student.getFirstName());
                    mInitial.setText(student.getMiddleInitial());
                    lName.setText(student.getLastName());
                    PUID.setText(student.getPUID());
                    address.setText(student.getAddress());
                    state.setText(student.getState());
                    zipCode.setSelectedItem(student.getZip());
                    country.setSelectedItem(student.getCountry());

                    // Now that we have set super class values -- Determine what type of student and set appropriate fields.
                    if (student instanceof Undergrad) {
                        Undergrad underGrad = (Undergrad) student;
                        college.setSelectedItem(underGrad.getMajor());
                        major.setEnabled(false);
                    } else if (student instanceof NonDegree) {
                        NonDegree non = (NonDegree) student;
                        major.setSelectedItem(non.getCollege());
                        college.setEnabled(false);
                    } else if (student instanceof Graduate) {
                        Graduate grad = (Graduate) student;
                        college.setSelectedItem(grad.getMajor());

                        if (grad.getMasterPhD()) {
                            master.setSelected(true);
                        } else {
                            PhD.setSelected(true);
                        }

                        if (grad.getThesis()) {
                            thesis.setSelected(true);
                        } else {
                            nonThesis.setSelected(true);
                        }
                        
                    }
                    // User was found set fields
                    found = true;
                    setInputFields(true);

                }
            }
        }
    }//GEN-LAST:event_btnQueryActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearText();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            System.exit(0);
        }

    }//GEN-LAST:event_btnExitActionPerformed

    private void mItemNewUndergradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemNewUndergradActionPerformed
        // TODO add your handling code here:
        isUndergrad = true;
        setInputFields(true);
    }//GEN-LAST:event_mItemNewUndergradActionPerformed

    private void mItemNewGraduateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemNewGraduateActionPerformed
        // TODO add your handling code here:
        isGraduate = true;
        setInputFields(true);
    }//GEN-LAST:event_mItemNewGraduateActionPerformed

    private void mItemNewNonDegreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemNewNonDegreeActionPerformed
        // TODO add your handling code here:
        isNonDegree = true;
        setInputFields(true);
    }//GEN-LAST:event_mItemNewNonDegreeActionPerformed

    private void mItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemSaveActionPerformed
        // TODO add your handling code here:
        
        if (isUndergrad) {
            Student underGrad = new Undergrad(fName.getText(), mInitial.getText(), lName.getText(), PUID.getText(),
                    address.getText(), state.getText(), zipCode.getSelectedItem().toString(),
                    country.getSelectedItem().toString(), college.getSelectedItem().toString());
            studentData.add(underGrad);
            setInputFields(false);
            isUndergrad = false;
            clearText();
        } else if (isGraduate) {
            Student grad = new Graduate(fName.getText(), mInitial.getText(), lName.getText(), PUID.getText(),
                    address.getText(), state.getText(), zipCode.getSelectedItem().toString(),
                    country.getSelectedItem().toString(), major.getSelectedItem().toString(), isThesis, masterPhD);

            studentData.add(grad);
            setInputFields(false);
            isGraduate = false;
            clearText();
        } else if (isNonDegree) {
            Student nonDegree = new Undergrad(fName.getText(), mInitial.getText(), lName.getText(), PUID.getText(),
                    address.getText(), state.getText(), zipCode.getSelectedItem().toString(),
                    country.getSelectedItem().toString(), college.getSelectedItem().toString());
            studentData.add(nonDegree);
            setInputFields(false);
            isNonDegree = false;
            clearText();
        }
        if (saveIndex != -1) {
            studentData.remove(saveIndex);
        }
        

    }//GEN-LAST:event_mItemSaveActionPerformed

    private void mItemClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemClearActionPerformed
        // TODO add your handling code here:
        clearText();
    }//GEN-LAST:event_mItemClearActionPerformed

    private void mItemEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemEnterActionPerformed
        // TODO add your handling code here:
        PUID.setEnabled(true);
    }//GEN-LAST:event_mItemEnterActionPerformed

    private void mItemExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemExecuteActionPerformed
        // TODO add your handling code here:

        String findStudent = PUID.getText().trim();
        String locPUID;
        Boolean found = false;
        int saveIndex = 0;

        for (Student student : studentData) {
            locPUID = student.getPUID();
            if (locPUID.equals(findStudent)) {
                setInputFields(true);
                fName.setText(student.getFirstName());
                mInitial.setText(student.getMiddleInitial());
                lName.setText(student.getLastName());
                PUID.setText(student.getPUID());
                address.setText(student.getAddress());
                state.setText(student.getState());
                zipCode.setSelectedItem(student.getZip());
                country.setSelectedItem(student.getCountry());

                // Now that we have set super class values -- Determine what type of student and set appropriate fields.
                if (student instanceof Undergrad) {
                    Undergrad underGrad = (Undergrad) student;
                    college.setSelectedItem(underGrad.getMajor());
                    major.setEnabled(false);
                } else if (student instanceof NonDegree) {
                    NonDegree non = (NonDegree) student;
                    major.setSelectedItem(non.getCollege());
                    college.setEnabled(false);
                } else if (student instanceof Graduate) {
                    Graduate grad = (Graduate) student;
                    college.setSelectedItem(grad.getMajor());

                    if (grad.getMasterPhD()) {
                        master.setSelected(true);
                    } else {
                        PhD.setSelected(true);
                    }

                    if (grad.getThesis()) {
                        thesis.setSelected(true);
                    } else {
                        nonThesis.setSelected(true);
                    }
                }
                // User was found set fields
                found = true;
                setInputFields(true);

            }
        }
    }//GEN-LAST:event_mItemExecuteActionPerformed

    private void menuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAboutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "\n Ming Gong\n gong62@purdue.edu", "Credit", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_menuItemAboutActionPerformed

    private void thesisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thesisActionPerformed
        // TODO add your handling code here:
        nonThesis.setSelected(false);
    }//GEN-LAST:event_thesisActionPerformed

    private void nonThesisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonThesisActionPerformed
        // TODO add your handling code here:
        thesis.setSelected(false);
    }//GEN-LAST:event_nonThesisActionPerformed

    private void masterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masterActionPerformed
        // TODO add your handling code here:
        PhD.setSelected(false);
    }//GEN-LAST:event_masterActionPerformed

    private void PhDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhDActionPerformed
        // TODO add your handling code here:
        master.setSelected(false);
    }//GEN-LAST:event_PhDActionPerformed

    public void clearText() {
        fName.setText(EMPTY);
        mInitial.setText(EMPTY);
        lName.setText(EMPTY);
        PUID.setText(EMPTY);
        address.setText(EMPTY);
        state.setText(EMPTY);
        college.setSelectedIndex(0);
        zipCode.setSelectedIndex(0);
        country.setSelectedIndex(0);
        major.setSelectedIndex(0);
        college.setSelectedIndex(0);
        thesis.setSelected(false);
        nonThesis.setSelected(false);
        master.setSelected(false);
        PhD.setSelected(false);
    }

    private void setInputFields(Boolean enable) {
        if (enable) {
            fName.setEnabled(true);
            mInitial.setEnabled(true);
            lName.setEnabled(true);
            PUID.setEnabled(true);
            address.setEnabled(true);
            state.setEnabled(true);
            college.setEnabled(true);
            zipCode.setEnabled(true);
            country.setEnabled(true);

            if (isUndergrad) {
                college.setEnabled(true); // Major

            } else if (isNonDegree) {
                major.setEnabled(true); // College
            } else if (isGraduate) {
                major.setEnabled(true);
                thesis.setEnabled(true);
                nonThesis.setEnabled(true);
                master.setEnabled(true);
                PhD.setEnabled(true);
            }
        } else {
            fName.setEnabled(false);
            mInitial.setEnabled(false);
            lName.setEnabled(false);
            PUID.setEnabled(false);
            address.setEnabled(false);
            state.setEnabled(false);
            college.setEnabled(false);
            major.setEnabled(false);
            country.setEnabled(false);
            zipCode.setEnabled(false);
            thesis.setEnabled(false);
            nonThesis.setEnabled(false);
            master.setEnabled(false);
            PhD.setEnabled(false);

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainGui().setVisible(true);
            }
        });
    }
    // customize
    boolean isThesis = true;
    boolean masterPhD = true;
    boolean isUndergrad = false;
    boolean isGraduate = false;
    boolean isNonDegree = false;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PUID;
    private javax.swing.JRadioButton PhD;
    private javax.swing.JTextField address;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnQuery;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> college;
    private javax.swing.JComboBox<String> country;
    private javax.swing.JTextField fName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField lName;
    private javax.swing.JTextField mInitial;
    private javax.swing.JMenuItem mItemClear;
    private javax.swing.JMenuItem mItemEnter;
    private javax.swing.JMenuItem mItemExecute;
    private javax.swing.JMenu mItemNew;
    private javax.swing.JMenuItem mItemNewGraduate;
    private javax.swing.JMenuItem mItemNewNonDegree;
    private javax.swing.JMenuItem mItemNewUndergrad;
    private javax.swing.JMenuItem mItemSave;
    private javax.swing.JComboBox<String> major;
    private javax.swing.JRadioButton master;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuItemAbout;
    private javax.swing.JMenu menuQuery;
    private javax.swing.JRadioButton nonThesis;
    private javax.swing.JTextField state;
    private javax.swing.JRadioButton thesis;
    private javax.swing.JComboBox<String> zipCode;
    // End of variables declaration//GEN-END:variables
}
